trigger:
- master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
  - stage: build
    displayName: Build  
    pool:
      vmImage: 'windows-latest'

    jobs:
      - job: BuildApplication
        displayName: Build Application
        steps:
        - task: NuGetToolInstaller@1

        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'

        - task: VSBuild@1
          inputs:
            solution: '$(solution)'
            msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'
        
        - task: Docker@2
          inputs:
            command: 'build'
            Dockerfile: '**/Dockerfile'

  - stage: test
    displayName: Test
    pool:
      vmImage: 'windows-latest'
    jobs:
      - job: TestApplication
        displayName: Test Application
        steps:
 
        - task: DotNetCoreCLI@2
          displayName: Run Dotnet tests
          inputs:
            command: test
            projects: '**/*Test*/*.csproj'
            arguments: '--configuration $(buildConfiguration)'            

  - stage: deliver
    displayName: Deliver
    pool:
      vmImage: 'windows-latest'
    jobs:
      - job: DeliverApplication
        displayName: Deliver Application
        steps:
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: Write-Host "Pretend delivery done"

